[pytest]
# Pytest configuration for SEO Content Automation System

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Asyncio configuration
asyncio_mode = auto

# Performance optimizations
addopts = 
    --tb=short
    --strict-markers
    -r fEsxX

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (may use external resources, slower)
    slow: Slow running tests (>5 seconds)
    fast: Fast tests suitable for quick feedback (<1 second)
    e2e: End-to-end tests that test the full workflow
    asyncio: Asynchronous tests
    real_api: Tests that make real API calls (exclude from CI)
    smoke: Critical path tests for deployment validation

# Test collection optimizations
# Don't recurse into these directories
norecursedirs = .git .tox dist build *.egg venv .venv htmlcov drafts node_modules

# Cache directory for test results
cache_dir = .pytest_cache

# Timeout configuration (requires pytest-timeout)
# Uncomment these lines if pytest-timeout is installed:
# timeout = 30
# timeout_method = thread
# timeout_disable_debugger = true

# Coverage integration
# Automatically add coverage when pytest-cov is installed
# addopts += --cov --cov-report=term-missing:skip-covered

# Warnings configuration
filterwarnings =
    # Ignore deprecation warnings from dependencies
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Show our own warnings
    default::Warning:seo_content_automation.*
    # Ignore specific noisy warnings
    ignore:.*unclosed.*:ResourceWarning

# Logging configuration for tests
log_cli = false
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Capture settings
# Capture output only on failure (use 'fd' for file descriptor capturing)
# Options: fd, sys, no, tee-sys
# capture = fd

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Parallel execution settings (when using pytest-xdist)
# These are applied when using -n flag
[pytest:xdist]
# Load balancing method
looponfail = False
# Ensure test isolation
boxed = False