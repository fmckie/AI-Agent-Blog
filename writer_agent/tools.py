"""
Tools for the Writer Agent.

This module contains the tool functions that the Writer Agent uses
to access research context and perform content optimization.
"""

import logging
from typing import Dict, Any
from pydantic_ai import RunContext

from models import ResearchFindings

logger = logging.getLogger(__name__)


def get_research_context(ctx: RunContext[Dict[str, Any]]) -> ResearchFindings:
    """
    Access the research findings from context.
    
    This tool allows the Writer Agent to access the research findings
    generated by the Research Agent.
    
    Args:
        ctx: PydanticAI run context containing research data
        
    Returns:
        Research findings to base the article on
    """
    return ctx.deps["research"]


def calculate_keyword_density(
    ctx: RunContext[Dict[str, Any]], 
    content: str, 
    keyword: str
) -> float:
    """
    Calculate keyword density in content.
    
    This tool helps the Writer Agent ensure optimal keyword density
    for SEO purposes.
    
    Args:
        ctx: PydanticAI run context
        content: Text to analyze
        keyword: Target keyword
        
    Returns:
        Keyword density as a percentage
    """
    # Simple keyword density calculation
    words = content.lower().split()
    keyword_lower = keyword.lower()
    keyword_count = sum(1 for word in words if keyword_lower in word)
    
    if len(words) == 0:
        return 0.0
        
    density = (keyword_count / len(words)) * 100
    return round(density, 2)